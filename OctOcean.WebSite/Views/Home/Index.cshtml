
@{
    ViewData["Title"] = "OctOcean's Blog";
    Layout = "~/Views/_Layout.cshtml";
}
<div class="site-middle">
    <div class="blog-list">
        <section class="blog-block ">
            <div class="blog-title">
                <h1><a href="detail.html">文章的标题</a></h1>
            </div>

            <div class="blog-rough">
                在javascript开发中用到继承的场景其实并不是很多，很多时候喜欢用mix-in的方式给对象扩展属性。但这不代表继承在javascript里没有用武之地，虽然没有真正的类和继承机制，但可以通过原型prototype来变相地实现继承。本文将详细介绍一种基于继承的设计模式——模板方法（TemplateMethod）模式
            </div>
            <div class="blog-attach">
                <p class="blog-label">
                    <span>1234&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span>Last update:2017-12-15</span>
                </p>
            </div>
        </section>
        <section class="blog-block ">
            <div class="blog-title">
                <h1><a href="detail.html">文章的标题</a></h1>
            </div>

            <div class="blog-rough">
                在javascript开发中用到继承的场景其实并不是很多，很多时候喜欢用mix-in的方式给对象扩展属性。但这不代表继承在javascript里没有用武之地，虽然没有真正的类和继承机制，但可以通过原型prototype来变相地实现继承。本文将详细介绍一种基于继承的设计模式——模板方法（TemplateMethod）模式
            </div>
            <div class="blog-attach">
                <p class="blog-label">
                    <span>1234&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span>Last update:2017-12-15</span>
                </p>
            </div>
        </section><section class="blog-block ">
            <div class="blog-title">
                <h1><a href="detail.html">文章的标题</a></h1>
            </div>

            <div class="blog-rough">
                在javascript开发中用到继承的场景其实并不是很多，很多时候喜欢用mix-in的方式给对象扩展属性。但这不代表继承在javascript里没有用武之地，虽然没有真正的类和继承机制，但可以通过原型prototype来变相地实现继承。本文将详细介绍一种基于继承的设计模式——模板方法（TemplateMethod）模式
            </div>
            <div class="blog-attach">
                <p class="blog-label">
                    <span>1234&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span>Last update:2017-12-15</span>
                </p>
            </div>
        </section><section class="blog-block ">
            <div class="blog-title">
                <h1><a href="detail.html">文章的标题</a></h1>
            </div>

            <div class="blog-rough">
                在javascript开发中用到继承的场景其实并不是很多，很多时候喜欢用mix-in的方式给对象扩展属性。但这不代表继承在javascript里没有用武之地，虽然没有真正的类和继承机制，但可以通过原型prototype来变相地实现继承。本文将详细介绍一种基于继承的设计模式——模板方法（TemplateMethod）模式
            </div>
            <div class="blog-attach">
                <p class="blog-label">
                    <span>1234&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span>Last update:2017-12-15</span>
                </p>
            </div>
        </section>

    </div>
</div>
<div class="site-right">
    <div class="blog-recommend">
        <h1>
            博客推荐
        </h1>
        <ul>
            <li>
                文章标题1
            </li>
            <li>
                文章标题1
            </li>
            <li>
                文章标题1
            </li>
            <li>
                文章标题1
            </li>
            <li>
                文章标题1
            </li>
            <li>
                文章标题1
            </li>
            <li>
                文章标题1
            </li>
        </ul>
    </div>

</div>
<div class="clear"></div>
